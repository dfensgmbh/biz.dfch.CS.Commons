#r "BenchmarkDotNet.dll"
#r "Microsoft.CodeAnalysis.dll"

using System.Diagnostics.Contracts;
using System.Reflection;
using BenchmarkDotNet.Attributes;
using BenchmarkDotNet.Running;
using BenchmarkDotNet.Toolchains;
using Microsoft.CodeAnalysis;
using Microsoft.CodeAnalysis.CSharp;

var source = @"
using BenchmarkDotNet.Attributes;

namespace biz.dfch.CS.Commons.Benchmarks
{
    public class MyBenchmarks
    {
        [Benchmark]
        public static void MyBenchmark()
        {
            var sut = new object();
        }
    }
}
";

// file name will look like this: 'dxxbefjl.m1g'
var assemblyName = Path.GetRandomFileName();
var fileName = assemblyName;
var assemblyLocation = Path.Combine(Directory.GetCurrentDirectory(), fileName);

var syntaxTree = CSharpSyntaxTree.ParseText(source);

var references = new[]
{
    MetadataReference.CreateFromFile(typeof(object).Assembly.Location),
    MetadataReference.CreateFromFile(typeof(BenchmarkRunner).Assembly.Location),
    MetadataReference.CreateFromFile(typeof(BenchmarkAttribute).Assembly.Location),
};
var compilation = CSharpCompilation.Create
(
    assemblyName,
    new[] { syntaxTree },
    references,
    new CSharpCompilationOptions(OutputKind.DynamicallyLinkedLibrary)
);

var emitResult = compilation.Emit(assemblyLocation);

var assembly = Assembly.Load(AssemblyName.GetAssemblyName(assemblyLocation));
var type = assembly.DefinedTypes.First();

var summary = BenchmarkRunner.Run(type);

/*
 * BenchmarkRunner will fail with an error message similar to this:
 * 
 * 

// ***** BenchmarkRunner: Start   *****
// Found benchmarks:
//   MyBenchmarks.MyBenchmark: DefaultJob

// Validating benchmarks:
Assembly hywsbvq0.onp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null which defines benchmarks is non-optimized
// **************************
// Benchmark: MyBenchmarks.MyBenchmark: DefaultJob
// *** Generate ***
// Result = Success
// BinariesDirectoryPath = C:\src\biz.dfch.CS.Commons\src\biz.dfch.CS.Commons.Benchmarks\bin\Debug

// *** Build ***
BuildScript: C:\src\biz.dfch.CS.Commons\src\biz.dfch.CS.Commons.Benchmarks\bin\Debug\BDN.Generated.bat
// Result = Success

// *** Execute ***
// Launch: 1 / 1
System.NullReferenceException: Object reference not set to an instance of an object.
   at BenchmarkDotNet.Autogenerated.Program.Main(String[] args)
ExitCode != 0
No more Benchmark runs will be launched as NO measurements were obtained from the previous run!

// Run, Diagnostic
// BeforeAnythingElse
System.NullReferenceException: Object reference not set to an instance of an object.
   at BenchmarkDotNet.Autogenerated.Program.Main(String[] args)
Sequence contains no elements
  + System.Linq.Enumerable.Last<TSource>(IEnumerable<TSource>)
  + BenchmarkDotNet.Running.BenchmarkRunnerCore.Execute(BenchmarkDotNet.Loggers.ILogger, BenchmarkDotNet.Running.Benchmark, BenchmarkDotNet.Toolchains.IToolchain, BenchmarkDotNet.Toolchains.Results.BuildResult, BenchmarkDotNet.Configs.IConfig, BenchmarkDotNet.Characteristics.IResolver, out BenchmarkDotNet.Engines.GcStats)
  + BenchmarkDotNet.Running.BenchmarkRunnerCore.Run(BenchmarkDotNet.Running.Benchmark, BenchmarkDotNet.Loggers.ILogger, BenchmarkDotNet.Configs.IConfig, string, Func<BenchmarkDotNet.Jobs.Job, BenchmarkDotNet.Toolchains.IToolchain>, BenchmarkDotNet.Characteristics.IResolver)
  + BenchmarkDotNet.Running.BenchmarkRunnerCore.Run(BenchmarkDotNet.Running.Benchmark[], BenchmarkDotNet.Loggers.ILogger, string, BenchmarkDotNet.Configs.IConfig, string, Func<BenchmarkDotNet.Jobs.Job, BenchmarkDotNet.Toolchains.IToolchain>, BenchmarkDotNet.Characteristics.IResolver)
  + BenchmarkDotNet.Running.BenchmarkRunnerCore.Run(BenchmarkDotNet.Running.Benchmark[], BenchmarkDotNet.Configs.IConfig, Func<BenchmarkDotNet.Jobs.Job, BenchmarkDotNet.Toolchains.IToolchain>)

 * 
 * 
 */
